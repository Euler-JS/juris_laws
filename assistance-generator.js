import OpenAI from 'openai';

/**
 * Gerador de Respostas Assistenciais
 * Cria respostas emp√°ticas com passos pr√°ticos para pessoas em situa√ß√£o vulner√°vel
 */
export class AssistanceGenerator {
  constructor(openaiApiKey) {
    this.openai = new OpenAI({ apiKey: openaiApiKey });
  }

  /**
   * Gera resposta assistencial completa
   * @param {string} pergunta - Situa√ß√£o do usu√°rio
   * @param {Object} classification - Classifica√ß√£o da inten√ß√£o
   * @param {Object} facts - Fatos extra√≠dos
   * @param {Array} relevantChunks - Chunks de leis relevantes do RAG
   * @returns {Promise<Object>} Resposta assistencial estruturada
   */
  async generateAssistance(pergunta, classification, facts, relevantChunks) {
    // Preparar contexto das leis
    const leisContext = relevantChunks
      .map((chunk, i) => `[LEI ${i + 1}] (${chunk.lei}, similaridade: ${(chunk.similarity * 100).toFixed(0)}%)\n${chunk.text}`)
      .join('\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n');

    // Preparar resumo da situa√ß√£o
    const situacaoResumo = facts ? `
SITUA√á√ÉO DO UTILIZADOR:
- Problema principal: ${facts.problema_principal}
- Problemas secund√°rios: ${facts.problemas_secundarios.join(', ') || 'nenhum'}
- Vulnerabilidades: ${facts.vulnerabilidades.tem_dependentes ? `${facts.vulnerabilidades.numero_dependentes} dependentes` : 'nenhuma espec√≠fica'}
- Situa√ß√£o financeira: ${facts.vulnerabilidades.situacao_financeira}
- Urg√™ncia: ${classification.urgencia}
- Emo√ß√£o detectada: ${classification.emocao}
` : '';

    const systemPrompt = `Voc√™ √© um Assistente Jur√≠dico Emp√°tico especializado nas leis de Mo√ßambique.

MISS√ÉO: Ajudar pessoas em situa√ß√µes vulner√°veis, fornecendo assist√™ncia jur√≠dica pr√°tica e motivadora.

PRINC√çPIOS:
1. SER HUMANO: Reconhe√ßa o sofrimento da pessoa, seja emp√°tico
2. SER CLARO: Use linguagem simples, evite juridiqu√™s
3. SER PR√ÅTICO: Forne√ßa passos concretos que a pessoa pode fazer AGORA
4. SER MOTIVADOR: Mostre que h√° esperan√ßa e que a lei protege
5. SER ESPEC√çFICO: Cite artigos de lei exatos, calcule valores quando poss√≠vel
6. SER COMPLETO: N√£o deixe a pessoa sem saber o que fazer em seguida

ESTRUTURA OBRIGAT√ìRIA DA RESPOSTA:

1. RECONHECIMENTO EMP√ÅTICO (2-3 frases)
   - Reconhe√ßa a situa√ß√£o dif√≠cil
   - Mostre empatia genu√≠na
   - D√™ esperan√ßa inicial

2. üõ°Ô∏è SEUS DIREITOS GARANTIDOS POR LEI
   Para cada direito:
   - Nome do direito (ex: "INDEMNIZA√á√ÉO POR DESPEDIMENTO")
   - Lei e artigo espec√≠fico (ex: "Lei do Trabalho 23/2007, Artigo 125")
   - O que a lei garante (linguagem simples)
   - Valor ou benef√≠cio espec√≠fico (se aplic√°vel)
   - Use ‚úì para cada item

3. üìã PASSOS PR√ÅTICOS - FA√áA AGORA
   Divida em:
   - URGENTE - Pr√≥ximas 48 horas (com checkboxes ‚òê)
   - Esta semana (a√ß√µes importantes)
   - Este m√™s (se aplic√°vel)
   
   Para cada passo:
   - Seja espec√≠fico (endere√ßos, telefones, hor√°rios)
   - Explique COMO fazer
   - Diga O QUE levar

4. ‚ö†Ô∏è PRAZOS CR√çTICOS
   - Liste todos os prazos legais importantes
   - Use üö® para prazos urgentes
   - Calcule quantos dias restam (se poss√≠vel inferir)
   - Explique consequ√™ncias de perder prazo

5. üÜò CONTACTOS √öTEIS
   - Inspe√ß√£o do Trabalho / Tribunal / Ordem dos Advogados
   - Assist√™ncia social (se situa√ß√£o financeira cr√≠tica)
   - Assist√™ncia jur√≠dica gratuita
   - Inclua: nome, endere√ßo, telefone, hor√°rio

6. üí° DICAS IMPORTANTES
   - Documentos a guardar
   - O que N√ÉO fazer
   - Erros comuns a evitar

7. MENSAGEM FINAL MOTIVADORA
   - Reforce que a lei est√° do lado da pessoa
   - Mencione que muitas pessoas conseguiram justi√ßa
   - Encoraje a n√£o desistir

TOM: Emp√°tico, humano, pr√°tico, encorajador, profissional
FORMATO: Use emojis, se√ß√µes claras, listas, destaques
LINGUAGEM: Simples, acess√≠vel, sem juridiqu√™s`;

    const userPrompt = `${situacaoResumo}

LEIS RELEVANTES QUE PROTEGEM O UTILIZADOR:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
${leisContext}

PERGUNTA/SITUA√á√ÉO DO UTILIZADOR:
"${pergunta}"

Forne√ßa assist√™ncia jur√≠dica completa seguindo TODA a estrutura obrigat√≥ria acima.
Use a data atual: 21 de outubro de 2025 para calcular prazos.`;

    try {
      console.log('\nüíô Gerando resposta assistencial...');

      const response = await this.openai.chat.completions.create({
        model: 'gpt-4o-mini',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: userPrompt }
        ],
        temperature: 0.7, // Um pouco mais criativo para ser emp√°tico
        max_tokens: 3000
      });

      const respostaTexto = response.choices[0].message.content;

      // Estruturar resposta
      return {
        modo: 'assistencia',
        resposta: respostaTexto,
        metadata: {
          classification,
          facts,
          leis_usadas: relevantChunks.map(c => c.lei),
          num_artigos: relevantChunks.length,
          urgencia: classification.urgencia,
          area_legal: classification.area_legal
        }
      };
    } catch (error) {
      console.error('‚ùå Erro ao gerar assist√™ncia:', error);
      throw error;
    }
  }

  /**
   * Gera resposta de consulta t√©cnica (modo objetivo)
   * @param {string} pergunta - Pergunta do usu√°rio
   * @param {Array} relevantChunks - Chunks de leis relevantes
   * @returns {Promise<Object>} Resposta t√©cnica
   */
  async generateConsulta(pergunta, relevantChunks) {
    const leisContext = relevantChunks
      .map((chunk, i) => `[TRECHO ${i + 1}] (${chunk.lei})\n${chunk.text}`)
      .join('\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n');

    const systemPrompt = `Voc√™ √© um assistente jur√≠dico especializado nas leis de Mo√ßambique.

Responda perguntas sobre leis de forma:
- OBJETIVA: V√° direto ao ponto
- PRECISA: Cite artigos e leis espec√≠ficas
- CLARA: Use linguagem acess√≠vel
- COMPLETA: N√£o deixe d√∫vidas

SEMPRE cite a fonte (Lei e Artigo) ao explicar algo.
Use o contexto fornecido. N√ÉO invente informa√ß√µes.`;

    const userPrompt = `Com base nas leis de Mo√ßambique abaixo, responda a pergunta do usu√°rio.

LEIS RELEVANTES:
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
${leisContext}

PERGUNTA:
${pergunta}

Responda de forma clara e objetiva, citando os artigos relevantes.`;

    try {
      const response = await this.openai.chat.completions.create({
        model: 'gpt-4o-mini',
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: userPrompt }
        ],
        temperature: 0.3,
        max_tokens: 2000
      });

      return {
        modo: 'consulta',
        resposta: response.choices[0].message.content,
        metadata: {
          leis_usadas: relevantChunks.map(c => c.lei),
          num_artigos: relevantChunks.length
        }
      };
    } catch (error) {
      console.error('‚ùå Erro ao gerar consulta:', error);
      throw error;
    }
  }
}
